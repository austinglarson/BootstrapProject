@import url('https://fonts.googleapis.com/css?family=Caladea&display=swap');

// Changes the theme colors from Bootstrap
$theme-colors: (
    "primary": #0c72b6
);

$body-bg: #f8f9fa;

// Bootstrap Sass Files
@import "node_modules/bootstrap/scss/bootstrap";

/********************* Sass Examples *********************/

// 1. Variables - objects that can be declared throughout the scss to use the style it has
$heading-font: 'Caladea';
$primary-color: #0c72b6;
$light-font-color: #757a7c;

$border-radius: 5px;


// 2. Nesting Selectors - offers a simpler visual hierarchy for selectors that use parents
.card {
    padding-bottom: 1rem;
    box-shadow: 0 0 1.5rem rgba(0, 0, 0, 0.1);

    &:hover {
        transform: scale(1.025);
        box-shadow: 0 0 0.75rem rgba(0, 0, 0, 0.15);

        .card-title {
            color: $primary-color;
        }
    }

    .card-body {
        text-decoration: none;
    }

    .card-text {
        color: $light-font-color;
    }

    .card-link {
        color: #f37907;
        text-align: center;

        &:hover {
            color: #f35207;
        }
    }
}


// 3. Nesting Properties - offers a simpler visual hierarchy for properties with similar namespaces
.card {
    border: {
        top: {
            width: 5px;
        }
        bottom: {
            width: 5px;
        }
    }

    transition: {
        duration: 0.2s;
        transition-timing-function: ease-in-out;
    }
}


// 4. Nested Media Query - offers a way to add media queries in a selection
.jumbotron h1.display-4 {
    font-size: 3.25rem;

    @media (max-width: 500px) {
        font-size: 2.5rem;
    }
}


// 5. @extend - passes all of these CSS styles to selectors that include it
%heading {
    font-family: $heading-font;
    color: #000;
}

h1 {
    @extend %heading;
    font-size: 2.5rem;
}

h2 {
    @extend %heading;
    font-size: 2rem;
}

h3 {
    @extend %heading;
    font-size: 1.5rem;
}


// 6. Mixin @includes - objects that can be declared throughout the scss that contain a group of properties
@mixin pill() {
    height: 40px;
    border-radius: 20px;

    &:hover {
        background-color: #0c66a1;
    }
}

.nav-pills li a.active {
    @include pill();
}


// 7. Function - runs an operation for scss values that returns a result
// 8. Math being used by dividing the height by two
@function circle-border($height) {
    @return ($height / 2);
}

.jumbotron .btn {
    height: 50px;
    border-radius: circle-border(50px)
}